조건 

-------------------------------------------------------------------------------
IF 문
-------------------------------------------------------------------------------
IF 조건 THEN
	조건처리;
END IF;

IF 조건 THEN
	조건처리1;
ELSE
	조건처리2;
END IF;

IF 조건1 THEN
ELSIF 조건2 THEN
	조건처리2;
	...
ELSE
	조건처리n;
END IF;


조건 예)
	BETWEEN 1 AND 3000	
	IF v_CHAR IN ('A', 'E') THEN
-------------------------------------------------------------------------------//

-------------------------------------------------------------------------------
CASE 문
-------------------------------------------------------------------------------
CASE 표현식
	WHEN 결과1 THEN
		처리문1;
	WHEN 결과2 THEN
		처리문2;
	...
	ELSE	/* 필수 : ELSE NULL; -- 아무것도 처리하지 않을 때.  */ 
		기타처리문 
END CASE;


많이 사용 하는 버젼 

CASE WHEN 표현식1 THEN
		처리문1;
	WHEN 표현식2 THEN
		처리문2
	...
	ELSE	/* 필수 */
		기타 처리문;
END CASE;

-------------------------------------------------------------------------------
LOOP
-------------------------------------------------------------------------------//
LOOP
	처리문;
	EXIT [WHEN 조건];
END LOOP;


-------------------------------------------------------------------------------//

-------------------------------------------------------------------------------
WHILE
-------------------------------------------------------------------------------//
WHILE 조건
LOOP
	처리문
END LOOP;

-------------------------------------------------------------------------------//

-------------------------------------------------------------------------------
FOR
 인덱스는 초기값에서 시작해서 최종값까지 루프를 돌면서 1씩 증가
 루프안에서 참조만 가능. 변경 불가.
-------------------------------------------------------------------------------//
FOR 인덱스 IN [REVERSE]초기값..최종값
LOOP
	처리문;
END LOOP;


DECLARE
	vn_base_num NUMBER := 3;
BEGIN
	FOR i IN REVERSE 1..9
	LOOP
		IF i = 3 THEN
			GOTO fourth;
		END IF;

		CONTINUE WHEN i = 5; -- 하단 로직 수행없이 다시 FOR 조건절로 제어 옮김.
		DBMS_OUTPUT.PUT_LINE(vn_base_num || '*' || i || '= ' || vn_base_num * i);
	END LOOP;

	<<fourth>>
END;

-------------------------------------------------------------------------------//






